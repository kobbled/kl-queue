PROGRAM test_queue
%NOLOCKGROUP

--set path type
%include systemlib.klt

--set priority queue type
%define class_name tprior
%include default_priority.klt
%ifdef queue_type_define
queue_type_define(class_name)
%endif

%include kunit.klh

--queue
%class tstque('queue.klc', 'queue.klh', 'default_queue.klt')
--priority queue
%class tprior('priority_queue.klc', 'priority_queue.klh', 'default_priority.klt')

ROUTINE t_push_pop : BOOLEAN
  VAR
    i : INTEGER
    queue : ARRAY[10] OF INTEGER
    exp_queue : ARRAY[10] OF INTEGER
    b : ARRAY[2] OF BOOLEAN
  BEGIN
    tstque__init
    
    --enqueue
    tstque__push(1)
    tstque__push(3)
    tstque__push(5)
    tstque__push(4)
    tstque__push(2)

    --dequeue
    FOR i=1 TO 5 DO
      queue[i] = tstque__pop
      tstque__push(ARRAY_LEN(queue) - i)
    ENDFOR

    b[1] = tstque__empty

    FOR i=1 TO 5 DO
      queue[i+5] = tstque__pop
    ENDFOR

    b[2] = tstque__empty

    --expected
    exp_queue[1] = 1 ; exp_queue[2] = 3 ; exp_queue[3] = 5 ;
    exp_queue[4] = 4 ; exp_queue[5] = 2 ; exp_queue[6] = 9 ;
    exp_queue[7] = 8 ; exp_queue[8] = 7 ; exp_queue[9] = 6 ;
    exp_queue[10] = 5 ;


    RETURN(kunit_eq_ari(exp_queue, queue) AND (NOT kunit_assert(b[1])) AND &
           kunit_assert(b[2]) )

  END t_push_pop

ROUTINE t_priority : BOOLEAN
  VAR
    i : INTEGER
    queue1, exp_queue1 : ARRAY[5] OF INTEGER
    queue2, exp_queue2 : ARRAY[5] OF INTEGER
  BEGIN
    tprior__init

    --test priority
    --enqueue
    tprior__push(1, 10)
    tprior__push(3, 5)
    tprior__push(5, 30)
    tprior__push(4, 15)
    tprior__push(2, 20)

    --dequeue
    FOR i=1 TO 5 DO
      queue1[i] = tprior__pop
    ENDFOR

    --expected
    exp_queue1[1] = 5 ; exp_queue1[2] = 2 ; exp_queue1[3] = 4 ;
    exp_queue1[4] = 1 ; exp_queue1[5] = 3 ;

    --test min priority
    --enqueue
    tprior__push(1, 1)
    tprior__push(3, 15)
    tprior__push(5, 10)
    tprior__push(4, 5)
    tprior__push(2, 20)

    --dequeue
    FOR i=1 TO 5 DO
      queue2[i] = tprior__pop_min
    ENDFOR

    --expected
    exp_queue2[1] = 1 ; exp_queue2[2] = 4 ; exp_queue2[3] = 5 ;
    exp_queue2[4] = 3 ; exp_queue2[5] = 2 ;

    RETURN(kunit_eq_ari(exp_queue1, queue1) AND kunit_eq_ari(exp_queue2, queue2))

  END t_priority

BEGIN
  kunit_test('push pop sequentially', t_push_pop) --asserts 3
  kunit_test('priority queue', t_priority) --asserts 2
  kunit_done
END test_queue